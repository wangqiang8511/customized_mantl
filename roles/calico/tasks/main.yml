---
# Setup etcd proxy
- name: setup start_etcd_proxy script
  sudo: yes
  template:
    src: start_etcd_proxy.sh.j2
    dest: /opt/bin/start_etcd_proxy.sh
    mode: 0755
  notify: restart etcd proxy
  tags:
    - etcd_proxy

- name: setup etcd proxy supervisord config
  sudo: yes
  template:
    src: etcd_proxy_supervisord.conf.j2
    dest: "{{ supervisord_conf_dir }}/etcd_proxy.conf"
  notify: restart etcd proxy
  tags:
    - etcd_proxy

- name: start etcd proxy supervisord
  sudo: yes
  supervisorctl: 
    name: etcd_proxy
    state: present
    supervisorctl_path: "{{ supervisord_exec_dir }}/supervisorctl"
  tags:
    - etcd_proxy

# Setup docker cluster store
- name: update docker default settings
  sudo: yes
  template:
    src: default_docker.j2
    dest: /etc/default/docker
  register: docker_config_change
  tags:
    - docker
    - calico

- name: restart docker when config changed
  sudo: yes
  service:
    name: docker
    state: restarted
  when: docker_config_change.changed

- name: enable docker
  sudo: yes
  service:
    name: docker
    enabled: yes
    state: started
  tags:
    - docker
    - calico

# Enable calico libnetwork plugin
- name: ensure customized bin
  sudo: yes
  file:
    path: /opt/bin
    state: directory
  tags:
    - calico

- name: copy calicoctl
  sudo: yes
  copy:
    src: calicoctl
    dest: /opt/bin/calicoctl
    mode: 0755
  tags:
    - docker
    - calico

- name: check calico libnetwork existing
  sudo: yes
  shell: "docker ps | grep calico-node"
  register: check_calico_libnetwork
  tags:
    - docker
    - calico

- name: enable calico plugin
  sudo: yes
  shell: "/opt/bin/calicoctl node --libnetwork" 
  environment:
    ETCD_AUTHORITY: "{{ private_ipv4 }}:{{ etcd_client_port }}"
  when: check_calico_libnetwork.stdout.find('calico-node') == -1
  tags:
    - docker
    - calico

- name: check calico network existing
  sudo: yes
  shell: "docker network ls | grep calico"
  register: check_calico_network
  tags:
    - docker
    - calico

- name: create calico network
  sudo: yes
  shell: "docker network create -d calico calico --subnet={{ calico_subnet }}" 
  when: check_calico_network.stdout.find('calico') == -1
  tags:
    - docker
    - calico
